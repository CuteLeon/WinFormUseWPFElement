1. WinForm 内从 [工具箱]> [WPF 互操作性]> 拖入 [ElementHost] 控件并 Fill 停靠；

2. 此时项目已经自动增加多个引用：
	PresentationCore
	PresentationFramework
	UIAutomationProvider
	WindowsBase
	WindowsFormsIntegration

3. 使用别名声明命名空间：
	using WPFWindow = System.Windows.Window;
	using WPFControl = System.Windows.Controls;
	using WPFMedia = System.Windows.Media;

4. 动态创建WPF容器控件并加入 ElementHost：
	WPFControl.WrapPanel WPFPanel = new WPFControl.WrapPanel();
    WPFPanel.Background = new WPFMedia.LinearGradientBrush(WPFMedia.Color.FromArgb(255, 255, 229, 59), WPFMedia.Color.FromArgb(255, 255, 37, 37), 30.0);
    WPFPanel.MouseLeftButtonDown += (s,e)=>AddNewLabel();
    MyElementHost.Child = WPFPanel;

5. 动态创建WPF子控件并加入WPF容器控件：
    private void AddNewLabel()
    {
        WPFControl.Label WPFLabel = new WPFControl.Label()
        {
            Width = Random.Next(100, 200),
            Height = Random.Next(50,150),
        };
        WPFLabel.Background = new WPFMedia.LinearGradientBrush(
            WPFMedia.Color.FromArgb(255, Convert.ToByte(Random.Next(256)), Convert.ToByte(Random.Next(256)), Convert.ToByte(Random.Next(256))),
            WPFMedia.Color.FromArgb(255, Convert.ToByte(Random.Next(256)), Convert.ToByte(Random.Next(256)), Convert.ToByte(Random.Next(256))),
            Random.Next(360)
            );
        WPFLabel.MouseRightButtonDown += (s, e) => WPFPanel.Children.Remove(WPFLabel);

        WPFPanel.Children.Add(WPFLabel);
    }